{"ast":null,"code":"import _objectWithoutProperties from \"/Users/innovation/Desktop/CreatorConnect/webapp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/innovation/Desktop/CreatorConnect/webapp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CreatorConnect.css';\nimport { Switch, Route, BrowserRouter as Router, Link } from 'react-router-dom';\nimport { render } from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home';\nimport UsersArray from './UsersArray';\nimport Launch from './Launch';\nimport Error from './Error';\nimport WrongPassword from './wrongPassword';\nimport NonexistentUser from './nonexistentUser';\nimport ExistentUser from './existentUser'; //import \"@fortawesome/fontawesome-free/css/all.min.css\";\n//import \"bootstrap-css-only/css/bootstrap.min.css\";\n//import \"mdbreact/dist/css/mdb.css\";\n\n/*const styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);*/\n\nconst ProtectedRoute = (_ref) => {\n  let Comp = _ref.component,\n      loggedIn = _ref.loggedIn,\n      path = _ref.path,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"loggedIn\", \"path\"]);\n\n  return React.createElement(Route, Object.assign({\n    path: path\n  }, rest, {\n    render: props => {\n      return loggedIn ? React.createElement(Comp, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n}; //the router below reads the path that the user is on and throws a React component at it depending on the path.\n\n\nconst routing = React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Launch,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/cards\",\n  component: Home,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/existentUser\",\n  component: ExistentUser,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/nonexistentUser\",\n  component: NonexistentUser,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/wrongPassword\",\n  component: WrongPassword,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/*\",\n  exact: true,\n  component: Error,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}))); //the code below reads the path and renders component on a conditional basis. i.e. /home throws two different components at different places...\n\nReactDOM.render(routing, document.getElementById(\"root\")); //ReactDOM.render(routing, document.getElementById('cards'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/innovation/Desktop/CreatorConnect/webapp/src/index.js"],"names":["React","ReactDOM","Switch","Route","BrowserRouter","Router","Link","render","serviceWorker","Home","UsersArray","Launch","Error","WrongPassword","NonexistentUser","ExistentUser","ProtectedRoute","Comp","component","loggedIn","path","rest","props","routing","document","getElementById","unregister"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,sBAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAa,IAAIC,MAAzC,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,SAAQC,MAAR,QAAqB,WAArB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;AACA;AACA;;AAEA;;;;;AAIA,MAAMC,cAAc,GAAG,UAAkD;AAAA,MAApCC,IAAoC,QAA/CC,SAA+C;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAXC,IAAW;;AACvE,SACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAED;AADR,KAEMC,IAFN;AAGE,IAAA,MAAM,EAAEC,KAAK,IAAI;AACf,aAAOH,QAAQ,GAAG,oBAAC,IAAD,oBAAUG,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,GAAyB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD,CAVD,C,CAWA;;;AACA,MAAMC,OAAO,GACX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAEZ,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,QAAlB;AAA2B,EAAA,SAAS,EAAEF,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,eAAlB;AAAkC,EAAA,SAAS,EAAEM,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,kBAAlB;AAAqC,EAAA,SAAS,EAAED,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,EAKE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,gBAAlB;AAAmC,EAAA,SAAS,EAAED,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,EAME,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,IAAlB;AAAuB,EAAA,KAAK,MAA5B;AAA6B,EAAA,SAAS,EAAED,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,CADF,CADF,C,CAYA;;AACAX,QAAQ,CAACM,MAAT,CAAgBgB,OAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AAEA;AACA;AACA;;AACAjB,aAAa,CAACkB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CreatorConnect.css';\nimport { Switch, Route, BrowserRouter as Router, Link } from 'react-router-dom';\nimport {render} from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home';\nimport UsersArray from './UsersArray';\nimport Launch from './Launch'\nimport Error from './Error'\nimport WrongPassword from './wrongPassword';\nimport NonexistentUser from './nonexistentUser';\nimport ExistentUser from './existentUser';\n//import \"@fortawesome/fontawesome-free/css/all.min.css\";\n//import \"bootstrap-css-only/css/bootstrap.min.css\";\n//import \"mdbreact/dist/css/mdb.css\";\n\n/*const styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);*/\nconst ProtectedRoute = ({ component: Comp, loggedIn, path, ...rest }) => {\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={props => {\n        return loggedIn ? <Comp {...props} /> : <Redirect to=\"/\" />;\n      }}\n    />\n  );\n};\n//the router below reads the path that the user is on and throws a React component at it depending on the path.\nconst routing = (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Launch}/>\n      <Route exact path=\"/cards\" component={Home}/>\n      <Route exact path=\"/existentUser\" component={ExistentUser}/>\n      <Route exact path=\"/nonexistentUser\" component={NonexistentUser}/>\n      <Route exact path=\"/wrongPassword\" component={WrongPassword}/>\n      <Route exact path=\"/*\" exact component={Error} />\n      </Switch>\n  </Router>\n)\n//the code below reads the path and renders component on a conditional basis. i.e. /home throws two different components at different places...\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n//ReactDOM.render(routing, document.getElementById('cards'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}