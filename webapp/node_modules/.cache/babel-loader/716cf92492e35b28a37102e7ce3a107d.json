{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/CreatorConnect/webapp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CreatorConnect.css';\nimport { Switch, Route, BrowserRouter as Router, Link } from 'react-router-dom';\nimport { render } from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home';\nimport UsersArray from './UsersArray';\nimport Launch from './Launch';\nimport Error from './Error'; //import \"@fortawesome/fontawesome-free/css/all.min.css\";\n//import \"bootstrap-css-only/css/bootstrap.min.css\";\n//import \"mdbreact/dist/css/mdb.css\";\n\n/*const styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);*/\n//the router below reads the path that the user is on and throws a React component at it depending on the path.\n\nReact.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Launch,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/cards\",\n  component: Home,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"\",\n  exact: true,\n  component: Error,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n})); //the code below reads the path and renders component on a conditional basis. i.e. /home throws two different components at different places...\n//ReactDOM.render(routing, document.getElementById('cards'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/innovation/Desktop/CreatorConnect/webapp/src/index.js"],"names":["React","ReactDOM","Switch","Route","BrowserRouter","Router","Link","render","serviceWorker","Home","UsersArray","Launch","Error","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,sBAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAa,IAAIC,MAAzC,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,SAAQC,MAAR,QAAqB,WAArB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;AACA;AACA;;AAEA;;;;AAKA;;AAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAED,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,QAAlB;AAA2B,EAAA,SAAS,EAAEF,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,EAAlB;AAAqB,EAAA,KAAK,MAA1B;AAA2B,EAAA,SAAS,EAAEG,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,E,CAMF;AAGA;AAEA;AACA;AACA;;AACAJ,aAAa,CAACK,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CreatorConnect.css';\nimport { Switch, Route, BrowserRouter as Router, Link } from 'react-router-dom';\nimport {render} from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home';\nimport UsersArray from './UsersArray';\nimport Launch from './Launch'\nimport Error from './Error'\n//import \"@fortawesome/fontawesome-free/css/all.min.css\";\n//import \"bootstrap-css-only/css/bootstrap.min.css\";\n//import \"mdbreact/dist/css/mdb.css\";\n\n/*const styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);*/\n\n//the router below reads the path that the user is on and throws a React component at it depending on the path.\n\n  <Switch>\n      <Route exact path=\"/\" component={Launch}/>\n      <Route exact path=\"/cards\" component={Home}/>\n      <Route exact path=\"\" exact component={Error} />\n  </Switch>\n\n//the code below reads the path and renders component on a conditional basis. i.e. /home throws two different components at different places...\n\n\n//ReactDOM.render(routing, document.getElementById('cards'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}